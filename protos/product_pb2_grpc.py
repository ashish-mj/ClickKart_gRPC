# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from protos import product_pb2 as protos_dot_product__pb2


class productServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createProduct = channel.unary_unary(
                '/product.productService/createProduct',
                request_serializer=protos_dot_product__pb2.product.SerializeToString,
                response_deserializer=protos_dot_product__pb2.productId.FromString,
                )
        self.getProduct = channel.unary_unary(
                '/product.productService/getProduct',
                request_serializer=protos_dot_product__pb2.productId.SerializeToString,
                response_deserializer=protos_dot_product__pb2.product.FromString,
                )
        self.updateProduct = channel.unary_unary(
                '/product.productService/updateProduct',
                request_serializer=protos_dot_product__pb2.product.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.deleteProduct = channel.unary_unary(
                '/product.productService/deleteProduct',
                request_serializer=protos_dot_product__pb2.productId.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.getAllProducts = channel.unary_stream(
                '/product.productService/getAllProducts',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=protos_dot_product__pb2.product.FromString,
                )


class productServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def createProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAllProducts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_productServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.createProduct,
                    request_deserializer=protos_dot_product__pb2.product.FromString,
                    response_serializer=protos_dot_product__pb2.productId.SerializeToString,
            ),
            'getProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.getProduct,
                    request_deserializer=protos_dot_product__pb2.productId.FromString,
                    response_serializer=protos_dot_product__pb2.product.SerializeToString,
            ),
            'updateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.updateProduct,
                    request_deserializer=protos_dot_product__pb2.product.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'deleteProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteProduct,
                    request_deserializer=protos_dot_product__pb2.productId.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'getAllProducts': grpc.unary_stream_rpc_method_handler(
                    servicer.getAllProducts,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=protos_dot_product__pb2.product.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'product.productService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class productService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def createProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/product.productService/createProduct',
            protos_dot_product__pb2.product.SerializeToString,
            protos_dot_product__pb2.productId.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/product.productService/getProduct',
            protos_dot_product__pb2.productId.SerializeToString,
            protos_dot_product__pb2.product.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/product.productService/updateProduct',
            protos_dot_product__pb2.product.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/product.productService/deleteProduct',
            protos_dot_product__pb2.productId.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAllProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/product.productService/getAllProducts',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            protos_dot_product__pb2.product.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
